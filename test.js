define("disk-system:widget/plugin/uploader/uploadUtil/h5Uploader/dragger.js", function (t, e, n) { var i = t("base:widget/libs/jquerypacket.js"), a = t("disk-system:widget/plugin/uploader/context.js").getContext(), o = function (t) { this.dom = t || document.body, this.pasteCount = function () { if (!/chrome\/\d/i.test(navigator.userAgent)) return !1; var t = localStorage.getItem("pasteCount"); return t && t.length > 0 && (t = parseInt(t, 10)), "number" != typeof t && (t = 0), t }(), this.init() }; o.prototype = { init: function () { this.preventEvent(), this.initCanvas() }, preventEvent: function () { var t = this; i(document).on({ dragstart: function () { return !1 }, dragleave: function (t) { t.preventDefault(), this.canvas && this.canvas.hide() }, drop: function (t) { t.preventDefault() }, dragenter: function (t) { t.preventDefault() }, dragover: function (t) { t.preventDefault() } }), i(this.dom).on({ dragenter: function () { t.resizeCanvas() } }), i(window).bind("paste", function (e) { if (t.pasteCount !== !1) { var n = e.target.nodeName; if (/input|textarea/i.test(n)) { if (!t.inputDomForFF || t.inputDomForFF[0] !== e.target) return; e.stopPropagation() } else if (i(e.target).parents(".dialog").length || i(e.target).hasClass("module-canvas") || i(e.target).parents(".context-menu").length || i(e.target).hasClass("dialog")) return; var o = e.originalEvent, r = o.clipboardData; (!/chrome\/\d/i.test(navigator.userAgent) || r && r.items && r.items.length) && (e.preventDefault(), 2 === t.pasteCount ? a.ui.alert({ title: "开启粘贴上传", body: "您多次页面中使用粘贴功能，粘贴上传功能将在下次粘贴时开启<br/>您可以使用 [Ctrl + V] 快捷键快速上传截图、文本等内容", onSure: function () { }, sureText: " 知道了 " }) : t.pasteCount > 2 && t.handleClipboard(r), localStorage.setItem("pasteCount", ++t.pasteCount)) } }), i(window).bind("keydown", function (e) { if (t.pasteCount !== !1) { var n = e.target.nodeName; if (!/input|textarea/i.test(n) && ((e.ctrlKey || e.metaKey) && t.inputDomForFF && t.inputDomForFF.focus(), 13 === e.keyCode && (e.ctrlKey || e.metaKey) && "object" == typeof localStorage)) { var i = localStorage.getItem("clipboardText"); if ("string" == typeof i && i.length) { var a = new ([i], { type: "text/plain" }), o = new Date; a.name = "文本 " + o.getFullYear() + "-" + (o.getMonth() + 1) + "-" + o.getDate() + " " + o.getHours() + "_" + o.getMinutes() + "_" + o.getSeconds() + " " + o.getMilliseconds() + ".txt", localStorage.setItem("clipboardText", ""), t.onDragFile(a) } } } }) }, handleClipboard: function (t) { var e = this; if (!/chrome\/\d/i.test(navigator.userAgent) || t && t.items && t.items.length) try { var n; if (t.items && (n = t.items[0]) && "file" === n.kind && 0 === n.type.indexOf("image")) { var i = n.getAsFile(), o = new Date; i.name = "截图 " + o.getFullYear() + "-" + (o.getMonth() + 1) + "-" + o.getDate() + " " + o.getHours() + "_" + o.getMinutes() + "_" + o.getSeconds() + " " + o.getMilliseconds() + ".png", e.onDragFile(i) } else if (!(n = t.getData("text/plain")) || 1 !== t.types.length && "text/html" !== t.types[1]) if (e.inputDomForFF) { var r = { msg: "当前浏览器仅支持文本的粘贴上传", mode: "caution", autoClose: !0, hasClose: !0 }; a.ui.tip(r) } else { var r = { msg: "仅支持截图、文本的粘贴上传", mode: "caution", autoClose: !0, hasClose: !0 }; a.ui.tip(r) } else { if ("text/plain" !== t.types[0] || "object" != typeof localStorage) return; var s = localStorage.getItem("clipboardText"); s || (s = ""); var o = new Date; s += "\n" + o.getFullYear() + "-" + (o.getMonth() + 1) + "-" + o.getDate() + " " + o.getHours() + ":" + o.getMinutes() + ":" + o.getSeconds() + " 复制的文本\n\n", n = s + n + "\n\n", localStorage.setItem("clipboardText", n); var r = { msg: "剪切板文本成功保存，按「Ctrl+回车键」上传为文件", mode: "success", autoClose: !0, hasClose: !0 }; a.ui.tip(r) } } catch (l) { } }, initTextareaInFF: function () { /Firefox\/\d+\.?/i.test(navigator.userAgent) && (this.inputDomForFF = i('<textarea style="resize:none;position:absolute;top:-100px;left:-100px;height:0;width0;"></textarea>'), i("body").append(this.inputDomForFF)) }, readClipboardData: function (t) { var e = new FileReader; e.onload = function (t) { console.log(t.target.result) }, e.readAsDataURL(t.getAsFile()) }, initCanvas: function () { var t = this; this.canvas || (this.canvas = i('<div style="position:absolute;background:rgba(255,255,255,0.6);                border:3px #ccc dashed;z-index:1000000;display:none;                color:#999;font-size:40px;text-align:center;overflow:hidden;                ">上传文件到当前目录下</div>'), i("body").append(this.canvas), this.canvas[0].addEventListener("drop", function (e) { e.preventDefault(), i(this).hide(); var n = e.dataTransfer.files; if (0 === n.length) return !1; for (var o = e.dataTransfer.items, r = e.dataTransfer.types, s = new Array, l = 0, u = 0, d = function (e, n) { if (n = n || "", e.isFile) e.file(function (e) { e.directoryPath = n + e.name, s.push(e); var i = l - u + 1; s.length === i && t.onDragDirectory(s) }); else if (e.isDirectory) { var i = e.createReader(); i.readEntries(function (t) { u += 1, l += t.length, t.forEach(function (t) { d(t, n + e.name + "/") }) }) } }, g = 0; g < n.length; g++)if (o && o[g]) { var c = o[g].webkitGetAsEntry(); c.isFile ? t.onDragFile(n[g]) : c.isDirectory && d(c) } else r.length > 1 && ("" === n[g].type || "undefined" == typeof n[g].type) ? a.ui.tip({ msg: "您的浏览器暂不支持上传文件夹或无后缀名的文件", mode: "caution", autoClose: !0 }) : t.onDragFile(n[g]) }, !1), this.canvas.on({ dragleave: function () { i(this).hide() }, click: function () { i(this).hide() }, mouseover: function () { i(this).hide() } })) }, resizeCanvas: function () { var t = i(this.dom).outerHeight(), e = i(this.dom).outerWidth(), n = i(this.dom).offset(), a = n.top, o = n.top; e = e > i(window).width() ? i(window).width() : e, t = t > i(window).height() ? i(window).height() : t, e -= 6, t -= 6, this.canvas.css({ top: a, left: o, height: t, "line-height": t + "px", width: e }).show() }, onDragFile: function () { }, onDragDirectory: function () { }, notSupportDirectory: function () { } }, n.exports = o });
; define("disk-system:widget/system/util/mouse-utils/mouse-drag.js", function (t, i, e) { function o(t) { this.md = new n(t.$dom), this.$dom = t.$dom, this.item = t.item, this.viewMod = t.viewMod, this.selectClass = t.selectClass, this.list = t.list, this.onDragEndCallback = t.onDragEndCallback, this.cacheList = [], this._init() } var n = t("base:widget/mouse-utils/mouse-drag.js"); o.prototype._init = function () { var t = this; t.onStart(), t.onSelect() }, o.prototype.onStart = function () { var t = this; t.md.onStart = function (i) { var e, o, n = t.$dom.find(t.item), s = $(i.target), a = s.closest(t.item); return o = a.attr("_position"), e = "list" === t.viewMod ? o : o * t.list.getColumnsCount() + a.index(), 1 !== n.length && a.hasClass(t.selectClass) ? (t.cacheList = n, t.md.setNum(t.list.getCheckedIndexs().length), !0) : !1 } }, o.prototype.onSelect = function () { var t = this; t.md.onSelect = function (i) { "list" === t.viewMod ? t.listViewDrag(i) : t.gridViewDrag(i) } }, o.prototype.listViewDrag = function (t) { var i, e, o, n, s, a, r = this; for (e = 0; e < r.cacheList.length; e++)if (a = $(r.cacheList[e]), o = a.attr("_position"), !r.list.isItemChecked(o)) { if (n = a.offset(), s = a.outerHeight(), n.top < t.top && n.top + s > t.top) return i = a.data("id"), void (r.md.onDragEnd = function (t) { return function () { var i = r.list.getCurrentView().getElementDataByPosition(t); return i.isdir ? ("function" == typeof r.onDragEndCallback && r.onDragEndCallback.call(r, i), void (r.md.onDragEnd = void 0)) : !1 } }(o)); r.md.onDragEnd = void 0 } }, o.prototype.gridViewDrag = function (t) { var i, e, o, n, s, a, r, d = this; for (e = 0; e < d.cacheList.length; e++) { r = $(d.cacheList[e]); var l = r.closest(d.item); if (o = r.attr("_position") * d.list.getColumnsCount() + l.index(), !d.list.isItemChecked(o)) { if (n = r.offset(), s = r.outerHeight(), a = r.outerWidth(), n.top < t.top && n.top + s > t.top && n.left < t.left && n.left + a > t.left) return i = r.data("id"), void (d.md.onDragEnd = function (t) { return function () { var i = d.list.getCurrentView().getElementDataByPosition(t); return i.isdir ? ("function" == typeof d.onDragEndCallback && d.onDragEndCallback.call(d, i), void (d.md.onDragEnd = void 0)) : !1 } }(o)); d.md.onDragEnd = void 0 } } }, e.exports = o });
; define("disk-system:widget/system/util/mouse-utils/mouse-select.js", function (t, e, o) { function i(t) { this.ms = new s(t.$dom), this.$dom = t.$dom, this.item = t.item, this.viewMod = t.viewMod, this.selectClass = t.selectClass, this.list = t.list, this.canSelect = t.canSelect || null, this.cacheList = [], this.positionArray = [], this.params = t || {}, this._init() } var s = t("base:widget/mouse-utils/mouse-selection.js"); i.prototype._init = function () { var t = this; t.onStart(), t.onSelect(), t.onEnd(t.params.onEnd) }, i.prototype.onStart = function (t) { var e = this; e.ms.onStart = function (o) { if (null !== e.canSelect && "function" == typeof e.canSelect && e.canSelect() === !1) return !1; var i, s = e.$dom.find(e.item), n = $(o.target), l = n.closest(e.item), p = l.attr("_position"); return i = "list" === e.viewMod ? p : p * e.list.getColumnsCount() + l.index(), e.positionArray = [], l.hasClass(e.selectClass) ? !1 : (e.cacheList = s, "function" == typeof t && t(o), !0) } }, i.prototype.onSelect = function (t) { var e = this; e.ms.onSelect = function (o) { "list" === e.viewMod ? e.listMouseSelect(o) : e.gridMouseSelect(o), "function" == typeof t && t(o) } }, i.prototype.onEnd = function (t) { var e = this; e.ms.onEnd = function () { e.list.setEachItemChecked(e.positionArray, !0), e.positionArray = [], "function" == typeof t && t() } }, i.prototype.listMouseSelect = function (t) { for (var e, o, i, s, n, l = this, p = 0; p < l.cacheList.length; p++)s = $(l.cacheList[p]), e = s.attr("_position"), o = s.offset(), i = s.outerHeight(), o.top < t.top && o.top + i > t.top || o.top > t.top && o.top + i < t.top + t.height || o.top < t.top + t.height && o.top + i > t.top + t.height ? (n = l.positionArray.indexOf(e), -1 === n && l.positionArray.push(e), s.addClass(l.selectClass)) : (s.removeClass(l.selectClass), n = l.positionArray.indexOf(e), n > -1 && l.positionArray.splice(n, 1)) }, i.prototype.gridMouseSelect = function (t) { var e, o, i, s, n, l, p, r = this; for (e = 0; e < r.cacheList.length; e++)n = $(r.cacheList[e]), o = parseInt(n.attr("_position"), 10) * r.list.getColumnsCount() + n.index(), i = n.offset(), s = n.outerHeight(), l = n.outerWidth(), (i.top < t.top && i.top + s > t.top || i.top > t.top && i.top + s < t.top + t.height || i.top < t.top + t.height && i.top + s > t.top + t.height) && (i.left < t.left && i.left + l > t.left || i.left > t.left && i.left + l < t.left + t.width || i.left < t.left + t.width && i.left + l > t.left + t.width) ? (p = r.positionArray.indexOf(o), -1 === p && r.positionArray.push(o), n.addClass(r.selectClass)) : (n.removeClass(r.selectClass), p = r.positionArray.indexOf(o), p > -1 && r.positionArray.splice(p, 1)) }, o.exports = i });
; define("disk-system:widget/system/fileService/mkdirInTree/createFolder.js", function (e, t, s) { function i() { return a.uniqueId("create_holder_") } function n() { this._mConfirmById = i(), this._mCancleById = i(), this._mInputById = i(), this._insertDom = "", this._container = null, this._icon = !1, this._mEmpty = !1 } var r = e("base:widget/libs/jquerypacket.js"), a = e("base:widget/libs/underscore.js"), o = e("system-core:context/context.js"), l = o.instanceForSystem, d = e("disk-system:widget/system/fileService/fileManagerApi/fileManagerApi.js"), c = e("disk-system:widget/system/uiService/fileTree/fileTree.js"); n.ILLEGAL_CHARS = /[\\\/:*?'<>|]/gi, n.prototype = { reBuild: function (e) { if (e || (e = {}), !e.insertDom) throw Error('you need to specify "_insertDom"'); if (this._insertDom = e.insertDom, !e.container) throw new Error('you need to specify "container"'); this._container = e.container, this._icon = e.icon || "treeview-dir", this.createDom() }, resetNewFolder: function () { var e = this, t = o.getList(), s = l.list, i = r("." + e._mInputById).val(), n = e.path + "/" + i, a = r("#plus-createFolder"), p = s.getCurrentPath(), m = l.tools.topMountManager.getLengthByKey(p); a.find(".sprite-ic2").addClass("treeview-leaf-loading"), d.createNewDir(n, function (n, o, d) { if (n) return l.ui.tip({ mode: "caution", msg: o }), !1; var u = d.path; i = d.name || u, i = i.substring(i.lastIndexOf("/") + 1), a.remove(), r(".treeview-node-on").removeClass("treeview-node-on"), e._insertDom.append(e.getListTpl(u)), c.handleEvent(); var v = l.tools.shareDirManager.checkIsShareDirByPath(u); d.server_filename = i, d.oper_id = window.yunData.MYUK, d.share = Number(v), d.is_root = 0, d.dir_empty = 1, t.cache.addDataByIndex(v ? "sharedir" : "list", p, { index: m, obj: d }), t.cache.addDataBefore("tree", p, d), 0 === u.indexOf(p) && s.refresh() }, i) }, createDom: function () { var e = this; r("#plus-createFolder").remove(), e._insertDom.prev().hasClass("treenode-empty") ? (e._insertDom.append(e.getFolderTpl()).removeClass("treeview-collapse").prev().removeClass("treenode-empty").addClass("_minus").find("em").addClass("minus"), e._mEmpty = !0) : (e._insertDom.prev().addClass("_minus").find(".plus").addClass("minus"), e._insertDom.removeClass("treeview-collapse"), e._insertDom.append(e.getFolderTpl()), e._mEmpty = !1), e.setOffset(), e.bindEvents(), e.path = c.getSelectPath(), c.handleEvent() }, setOffset: function () { var e = r("#plus-createFolder").position().top; e = this._container.scrollTop() + e - 211, this._container.scrollTop(e) }, cancelDom: function () { var e = this, t = r("#plus-createFolder"); e._mEmpty ? (t.parent().prev().addClass("treeview-node-on"), t.remove(), e._insertDom.addClass("treeview-collapse").prev().addClass("treenode-empty").removeClass("_minus").find("em").removeClass("minus")) : (t.parent().prev().addClass("treeview-node-on"), t.remove()) }, getFolderTpl: function () { var e = parseInt(this._insertDom.attr("data-padding-left"), 10); return '<li id="plus-createFolder"><div class="treeview-node treenode-empty" data-padding-left="' + e + '" style="padding-left:' + e + 'px"><span class="treeview-node-handler"><em class="b-in-blk plus sprite-ic2 "></em><dfn class="b-in-blk treeview-ic ' + this._icon + '"></dfn><span class="plus-create-folder"><input class="input ' + this._mInputById + '" type="text" value="新建文件夹"><span class="sure ' + this._mConfirmById + '"></span><span class="cancel ' + this._mCancleById + '"></span></span></span></div><ul class="treeview treeview-content treeview-collapse"  data-padding-left="' + (e + 15) + '"></ul></li>' }, getListTpl: function (e) { var t = parseInt(this._insertDom.attr("data-padding-left"), 10); return '<li><div class="treeview-node treenode-empty treeview-node-on" data-padding-left="' + t + '" style="padding-left:' + t + 'px"><span class="treeview-node-handler"><em class="b-in-blk plus sprite-ic2 "></em><dfn class="b-in-blk treeview-ic ' + this._icon + '"></dfn><span class="treeview-txt" data-file-path="' + e + '">' + l.tools.baseService.toEntity(e.substring(e.lastIndexOf("/") + 1)) + '</span></span></div><ul class="treeview treeview-content treeview-collapse" data-padding-left="' + (t + 15) + '"></ul></li>' }, bindEvents: function () { var e = this; r("." + e._mInputById).select().focus().on({ blur: function () { }, keyup: function (t) { 13 == t.keyCode && e.resetNewFolder() } }), r("." + e._mConfirmById).click(function () { e.resetNewFolder() }), r("." + e._mCancleById).click(function () { e.cancelDom() }) } }, s.exports = new n });
; define("disk-system:widget/system/uiService/fileTree/fileTree.js", function (e, t, i) { function a() { this._mHandleListener = window.disk.obtainId(), this._vHost = null, this._vTreeViewCache = {}, this.selectedCallback = null, this._vInit = !1, this._showShareDir = !1, this._isZip = !1, this._vSelectPath = "/", this._vError = !0, this.vInitPath = "/", this.historyConfig = { maxLength: 40, overlength: !1, minAveragelength: 5, averageLength: 5 }, this.folderCache = new d("tree", this.folderCacheConfig), this.template = s.template(["<li>", "<div class=\"treeview-node <% print(data.dirEmpty ? 'treenode-empty' : '') %> ", "<% print(data.nodeOn ? 'treeview-node-on' : '') %> ", "<% print(data.nodeRoot ? 'treeview-root' :  '') %> ", "<% print(data.minus ? '_minus' : '') %> \" ", "<% print(data.isShareDir ? 'data-sharedir=1' : '') %> ", "<% print(data.disableCheck ? 'data-disable-check=1' : '') %>  ", "<% print(data.icon ? ('data-icon='+data.icon) : '') %>  ", 'data-padding-left="<%= data.paddingLeft %>" style="padding-left:<%= data.paddingLeft %>px">', '<span class="treeview-node-handler">', "<em class=\"b-in-blk plus icon-operate <% print(data.minus ? 'minus' : '') %>\" ></em>", '<dfn class="b-in-blk treeview-ic ', "<% print(data.notShowIcon ? 'treeview-dir' : (data.icon || 'treeview-dir')) %>\"></dfn>", '<span class="treeview-txt" data-file-path="<%= data.path %>"><%= data.fileName %></span>', "</span>", "</div>", "<ul class=\"treeview <% print(data.nodeRoot ? 'treeview-root-content' : '') %> ", "treeview-content <% print(data.minus ? '' : 'treeview-collapse') %>\"", " data-padding-left=\"<% print((data.paddingLeft + 15) + 'px') %>\"></ul>", "</li>"].join(""), { variable: "data" }) } var r = window.yunData, n = e("base:widget/libs/jquerypacket.js"), s = e("base:widget/libs/underscore.js"), o = e("base:widget/tools/service/tools.util.js"), l = e("base:widget/tools/service/tools.event.js").EventEmitter, h = e("system-core:context/context.js").instanceForSystem, d = e("system-core:system/cache/listCache/cacheManage.js"), p = h.tools.topMountManager, c = h.tools.shareDirManager, v = h.message; o.inherits(a, l), a.ROOT = 0, a.NORMAL = 1, a.PARTICULAR_DIR_MAP = { "/": "/全部文件", "/apps": "/我的应用数据", "/百度云收藏": "/百度云收藏", "/来自PC的备份文件": "/来自PC的备份文件", "/我的分享": "/我的分享", "/我的作品": "/我的作品" }, a.prototype.folderCacheConfig = { api: "/api/list", params: { folder: 1, order: "name", desc: 0, showempty: 0, web: 1 }, limit: 500, currentPage: 0, listKey: "list", getParamsBykey: function (e) { return { dir: e } }, getPageParams: function (e, t) { return { page: e, num: t } }, getKeyByParams: function (e) { return e.dir }, beforeListPush: function (e) { for (var t = 0; t < e.length; t++)e[t].share = e[t].share ? e[t].share % 2 : 0; return e }, failCallBack: function (e, t, i) { i = i.params, i.FileTreeView._errorToast(e), i.host.parent().find(".minus").removeClass("treeview-leaf-loading") } }, 1 === r.sharedir && (a.prototype.folderCacheConfig.topMount = function (e, t, i) { return a.obtain._showShareDir ? p.mount(e, t, i, p.FILE_IDENTITY.SHARE) : p.demount(e, t, i, p.FILE_IDENTITY.SHARE) }), a.prototype._init = function () { function e(e) { e = e || "全部文件"; var a = document.createElement("ul"); a.className = "treeview treeview-content " + (this._mHandleListener || ""), t._vHost.appendChild(a); var r = t.vInitPath, n = !1, s = !1; 255 !== window.yunData.sharedir && (n = c.checkIsShareDirByPath(r), s = n ? p.SHARE_DIR_ICON : !1), a.innerHTML = t._tpl({ fileName: e, nodeRoot: !0, minus: !0, paddingLeft: i, nodeOn: !0, path: r, icon: s, notShowIcon: !0, isShareDir: n }), t._vInit = !0, t._buildTreeView({ dir: r, paddingLeft: 15 }) } var t = this, i = 0; t._isZip && "/" !== t.vInitPath ? (i = 1, t.showFileHistory(t.vInitPath)) : n(".filetree-history").remove(), this._isZip || "/" === this.vInitPath ? e() : c.getNameByFakepath(this.vInitPath, e) }, a.prototype._buildTreeView = function (e) { function t(e) { i._vError = !0, i._vTreeViewCache = e; for (var t = 0, r = i._vTreeViewCache.length, n = null; r > t; t++) { n = i._vTreeViewCache[t]; var h = n.path, d = "", v = !1, f = !1, g = !1; if (255 !== window.yunData.sharedir && (v = c.checkIsShareDirByPath(h), f = v || !!n.share, g = f ? p.SHARE_DIR_ICON : n.icon), v) { if (0 === n.isdir) continue; d = n.server_filename, g = p.SHARE_DIR_ICON } else d = i.changePath(h); a += i._tpl({ dirEmpty: n.dir_empty, paddingLeft: o, path: h, fileName: d, icon: g, isShareDir: f, disableCheck: n.disableCheck }) } s.html(a).attr("data-padding-left", o), i.handleEvent(), l.removeClass("treeview-leaf-loading") } var i = this, a = "", r = e.dir || "/", s = e.host || n(".treeview-root-content"), o = e.paddingLeft, l = s.parent().find(".minus"); l.addClass("treeview-leaf-loading"), c.checkIsShareDirByPath(r) ? v.trigger("system-load-share-dir-list", { dir: r, complete: t, host: s, FileTreeView: i }) : (this.folderCache.updateKey(r), this.folderCache.getCacheData(-1, t, { host: s, FileTreeView: i })) }, a.prototype._tpl = function (e) { return this.template(e) }, a.prototype._errorToast = function (e) { var t = ""; return e && "string" == typeof e ? t = e : (t = h.errorMsg(e.errno, "列表加载失败，请稍后重试&hellip;"), this._vError = !1), h.ui.tip({ mode: "failure", msg: t }), !1 }, a.prototype._getPath = function (e) { var t = e.find(".treeview-txt").attr("data-file-path"); return t || (t = e.parent().parent().prev().find(".treeview-txt").attr("data-file-path") || "/"), this._vSelectPath = t }, a.prototype.getParentPath = function (e) { return e.slice(0, e.lastIndexOf("/")) || "/" }, a.prototype.parseNameFromPath = function (e) { return e.substring(e.lastIndexOf("/") + 1, e.length) }, a.prototype.changePath = function (e) { return this.parseNameFromPath(a.PARTICULAR_DIR_MAP[e] ? a.PARTICULAR_DIR_MAP[e] : e) }, a.prototype.build = function (e) { var t = (new Date).getTime(); this._vHost = e && e.host, this.selectedCallback = e && e.selectedCallback, this._showShareDir = e.showShareDir, this._isZip = e.isZip, e && e.path && (this.vInitPath = e.path), this._vInit ? this._vError && (this._vHost.innerHTML = "", this._init()) : this._init(); var i = (new Date).getTime() - t; h.log.send({ name: "fileTreeRender", value: i }) }, a.prototype.getSelectPath = function () { return this._getPath(n(".treeview-node-on")) }, a.prototype.showFileHistory = function (e) { if ("/" === e) return void n(".filetree-history").remove(); var t = this, i = t.historyConfig, a = e.split("/"); if (e.length > i.maxLength) { t.historyConfig.overlength = !0; var r = parseInt(i.maxLength / a.length); t.historyConfig.averageLength = r > i.minAveragelength + 3 ? r : 5 } else t.historyConfig.overlength = !1; t.buildHistory(a), t.handleEvent() }, a.prototype.buildHistory = function (e) { var t = this, i = t.historyConfig, a = "", r = "", s = ""; i.maxDeep = parseInt(i.maxLength / (i.minAveragelength + 3)), s = i.averageLength === i.minAveragelength && e.length > i.maxDeep + 1 ? '<span class="filetree-history-item" node-type="filetree-history-item" path="/">全部文件</span><span class="filetree-separator-gt">></span><span class="dot">...</span>' : '<span class="filetree-history-item" node-type="filetree-history-item" path="/">全部文件</span>'; for (var o = 1; o < e.length; o++)a = a + "/" + e[o], r = t.historyConfig.overlength && e[o].length > i.maxDeep + 1 ? e[o].substring(0, t.historyConfig.averageLength) + "..." : e[o], i.averageLength === i.minAveragelength && e.length > i.maxDeep + 1 ? o > e.length - (i.maxDeep + 1) && (s = s + '<span class="filetree-separator-gt">></span><span class="filetree-history-item" node-type="filetree-history-item" path="' + a + '">' + r + "</span>") : s = s + '<span class="filetree-separator-gt">></span><span class="filetree-history-item" node-type="filetree-history-item" path="' + a + '">' + r + "</span>"; var l = n(".filetree-history"); l.length ? l.html(s) : n(t._vHost).before('<div class="filetree-history">' + s + "</div>") }, a.prototype.handleEvent = function () { var e = this; n(".treeview-node").off().on({ mouseenter: function () { n(this).addClass("treeview-node-hover") }, mouseleave: function () { n(this).removeClass("treeview-node-hover") }, click: function () { var t = n(this), i = t.hasClass("_minus"), a = t.hasClass("treeview-node-on"), r = t.hasClass("treenode-empty"), s = t.attr("data-padding-left"), o = (t.hasClass("waitHandle"), e._getPath(t)), l = t.next("ul"), h = !!t.attr("data-sharedir"), d = t.find(".plus"), p = t.find(".treeview-ic"); a || (n(".treeview-node-on").removeClass("treeview-node-on"), t.addClass("treeview-node-on")), a && i || r ? (t.removeClass("_minus"), d.removeClass("minus"), l.addClass("treeview-collapse"), h && p.addClass("dir-share-small").removeClass("treeview-dir")) : (t.addClass("_minus"), d.addClass("minus"), l.removeClass("treeview-collapse"), h && p.removeClass("dir-share-small").addClass("treeview-dir")), "function" == typeof e.selectedCallback && e.selectedCallback.call(e.selectedCallback), 0 !== t.next("ul").children().length || r || e._buildTreeView({ dir: o, host: l, paddingLeft: parseInt(s, 10) + 15 }), e._isZip && "/" !== e.vInitPath && e.showFileHistory(o), e.emit("selectfolder", o) } }), n(".filetree-history-item").off().on({ click: function () { var t = n(this).attr("path"); "function" == typeof e.selectedCallback && e.selectedCallback.call(e.selectedCallback), e.build({ host: e._vHost, path: t || "/" }), e.showFileHistory(t) } }) }, a.obtain = new a, i.exports = a.obtain });
; define("disk-system:widget/system/uiService/fileTreeDialog/fileTreeDialog.js", function (e, i, t) { function o() { this.config = {}, this.dialog = null, this.zipPath = "/", this.showShareDir = !1; var e = this; a.on("selectfolder", function (i) { e.setButtonDisable(i === h) }) } var s = e("base:widget/libs/jquerypacket.js"), n = e("base:widget/libs/underscore.js"), a = e("disk-system:widget/system/uiService/fileTree/fileTree.js"), l = e("system-core:system/uiService/dialog/dialog.js"), r = e("system-core:context/context.js").instanceForSystem, c = e("disk-system:widget/system/fileService/mkdirInTree/createFolder.js"), h = "shareHolder"; o.singleton = null, o.obtain = function () { return null === o.singleton && (o.singleton = new o), o.singleton }, o.DIALOG_ID = "fileTreeDialog", o.prototype.getFileTree = function (e, i) { var t = this, o = { host: this.dialog.$dialog.find(".file-tree-container")[0], path: e || "/", showShareDir: t.showShareDir, isZip: !!i }; i && e && "/" !== e && s.extend(!0, o, { selectedCallback: t.selectedCallback }), a.build(o) }, o.prototype.setOptions = function (e) { if (!e) throw new Error("[fileTreeDialog] must set options for FileTreeDialog"); if (!e.title) throw new Error('[fileTreeDialog] title "' + e.title + '" should be set'); if (this.config.title = e.title, !n.isFunction(e.confirm)) throw new Error("[fileTreeDialog] confirm should be set"); this.confirm = e.confirm, e.zipPath && (this.zipPath = e.zipPath), n.isFunction(e.afterHide) && (this.afterHide = e.afterHide), this.showShareDir = e.showShareDir, this.cancel = e.cancel }, o.prototype.buildDialog = function () { var e = this; this.dialog = new l({ id: o.DIALOG_ID, title: this.config.title, body: '<div class="file-tree-container"></div>', draggable: !0, position: { xy: "center" }, buttons: [{ name: "cancel", title: "取消", type: "big", padding: ["50px", "50px"], position: "right", click: function () { e.dialog.hide(), "function" == typeof e.cancel && e.cancel() } }, { name: "confirm", title: "确定", type: "big", color: "blue", padding: ["50px", "50px"], position: "right", click: function () { var i = s(".save-zip-path"), t = a.getSelectPath() || {}; return i.hasClass("check") && (t = e.getSavePath()), t === h ? void r.ui.tip({ mode: "caution", msg: "不能复制文件至“共享给我的文件夹”" }) : void e.confirm(t) } }, { title: "新建文件夹", icon: "icon-newfolder", type: "big", position: "left", click: function () { var i = e.dialog.$dialog, t = e.dialog.$dialog.find(".treeview-node-on"); c.reBuild({ icon: t.attr("data-icon"), insertDom: t.next(".treeview-content"), container: i.find(".file-tree-container") }) } }], afterHide: function () { "function" == typeof e.afterHide && e.afterHide() } }), this.bindSavePathEvent() }, o.prototype.setButtonDisable = function (e) { this.dialog.setButtonDisable(e, 2) }, o.prototype.changeTitle = function () { this.config.title && this.dialog.title(this.config.title) }, o.prototype.show = function (e) { var i = n.now(); return this.setOptions(e), this.dialog || this.buildDialog(), this.changeTitle(), this.dialog.show(), e.zipPath ? this.showZipPath(e.zipPath) : s(".save-zip-path").remove(), this.getFileTree(e.path), r.log.send({ name: "dialogShow-file", value: n.now() - i }), this }, o.prototype.hide = function () { return this.dialog.hide(), this }, o.prototype.showZipPath = function (e) { var i = s(".save-zip-path"); i.length ? (i.html('<span class="save-chk-io"></span>解压到压缩包所在目录：' + e), i.attr("title", e), i.removeClass("check")) : this.dialog.$dialog.find(".dialog-body").after('<div class="save-zip-path" title="' + e + '"><span class="save-chk-io"></span>解压到压缩包所在目录：' + e + "</div>") }, o.prototype.getSavePath = function () { var e = null; return s(".save-zip-path").hasClass("check") && (e = this.zipPath), e }, o.prototype.bindSavePathEvent = function () { var e = this, i = e.dialog.$dialog; i.on("click", ".save-zip-path", function () { var i = s(this), t = i.attr("class"); t.indexOf("check") >= 0 ? (i.removeClass("check"), e.getFileTree("/", !0)) : (i.addClass("check"), e.getFileTree(e.zipPath, !0)) }) }, o.prototype.selectedCallback = function () { s(".save-zip-path").removeClass("check") }, t.exports = o.obtain() });webkitGetAsEntry